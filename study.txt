1.一般的框架的入口文件  作用都是定义各种路径常量和系统常量
2.读取配置文件的配置信息 配置文件里面的一般都是先判断系统常量是否已定义（说明是从单入口进入的），
之后return一个数组

3.关于控制器的一些自动化动作（入判断是否已经登录），一般是创建一个common类去继承基类，在common类的构造方法中进行这些需要自动化的动作，  之后去继承该common类即可

4.配合smarty使用模板编译和页面缓存

5.提供重定向 或 404提示

6.header函数设置浏览器缓存

7.memcache缓存

8.Xenu工具检查死链

9.网站的一些公用的 title meta descrition信息写入到配置文件中，以后就不用去html页面中修改了

10.使用eclipse注意注释
/**
*
*/的格式

11.使用wamp开启虚拟主机

12.使用git

13.注意使用rewrite规则 有利于seo

14. rewrite 有写匹配模式 没写替换语句的话会导致wamp重启失败

   
15.关于首页各个板块数据的读取
假设首页有5个板块区域（假设都为文章类，每个板块区域有不同的板块名，该板块下有属于他自己的类型和记录条数  这些都可以在一个配置文件中用一个多维数组来配置）
通过index方法去显示首页，
在首页中读取该多维数组出来，之后用foreach遍历，在foreach里面再依次去查询数据库获取相关数据并且在这里assign到html模板中去........

同样，对于不用的html网页，会有他自己的title meta keywords description ，这些都可以先写在配置文件里面去，之后读取配置文件再assign到模板中。以后要是想修改就可以不用在html文件中直接修改了，在配置文件那里改就行了

----------------------------------------------------------------------------------
16. 注意代码的规范性，整体设计架构，代码复用，分层明确，
注意 优雅性，可读性，简洁性，例如：
如果是简单的 
if( a== "hello"){
	b="world";
}else{
	b="hello world";
}

使用三元运算符  b = a=="hello"?"world":"hello world";

---------------------------------------------------------
bootstrap + ajax 

---------------------
http://symfony.cn/

-----------------------------
安装switch host 
谷歌浏览器 暗转 hosts扩展（不用邮件登陆注册的那个）
安装clear cache扩展  清除缓存
-------------------------------------------
mysql  存储过程 union join 联合查询
------------------------------------
amcharts js图形化工具
-----------------------------------------

